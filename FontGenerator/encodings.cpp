#include "charmap.h"

#include "memdbg.h"

#define A ENCODING_APPLEROMAN_VALID
#define S ENCODING_MSSYMBOL_VALID
#define U ENCODING_UNICODE_VALID

const struct encodingCharDef defaultEncodingCharASCII[] = {
	{ 0x20, A | U, 0x20, 0x00, 0x20 }, // Space
	{ 0x21, A | U, 0x21, 0x00, 0x21 }, // !
	{ 0x22, A | U, 0x22, 0x00, 0x22 }, // "
	{ 0x23, A | U, 0x23, 0x00, 0x23 }, // #
	{ 0x24, A | U, 0x24, 0x00, 0x24 }, // $
	{ 0x25, A | U, 0x25, 0x00, 0x25 }, // %
	{ 0x26, A | U, 0x26, 0x00, 0x26 }, // &
	{ 0x27, A | U, 0x27, 0x00, 0x27 }, // '
	{ 0x28, A | U, 0x28, 0x00, 0x28 }, // (
	{ 0x29, A | U, 0x29, 0x00, 0x29 }, // )
	{ 0x2A, A | U, 0x2A, 0x00, 0x2A }, // *
	{ 0x2B, A | U, 0x2B, 0x00, 0x2B }, // +
	{ 0x2C, A | U, 0x2C, 0x00, 0x2C }, // ,
	{ 0x2D, A | U, 0x2D, 0x00, 0x2D }, // -
	{ 0x2E, A | U, 0x2E, 0x00, 0x2E }, // .
	{ 0x2F, A | U, 0x2F, 0x00, 0x2F }, // /
	{ 0x30, A | U, 0x30, 0x00, 0x30 }, // 0
	{ 0x31, A | U, 0x31, 0x00, 0x31 }, // 1
	{ 0x32, A | U, 0x32, 0x00, 0x32 }, // 2
	{ 0x33, A | U, 0x33, 0x00, 0x33 }, // 3
	{ 0x34, A | U, 0x34, 0x00, 0x34 }, // 4
	{ 0x35, A | U, 0x35, 0x00, 0x35 }, // 5
	{ 0x36, A | U, 0x36, 0x00, 0x36 }, // 6
	{ 0x37, A | U, 0x37, 0x00, 0x37 }, // 7
	{ 0x38, A | U, 0x38, 0x00, 0x38 }, // 8
	{ 0x39, A | U, 0x39, 0x00, 0x39 }, // 9
	{ 0x3A, A | U, 0x3A, 0x00, 0x3A }, // :
	{ 0x3B, A | U, 0x3B, 0x00, 0x3B }, // ;
	{ 0x3C, A | U, 0x3C, 0x00, 0x3C }, // <
	{ 0x3D, A | U, 0x3D, 0x00, 0x3D }, // =
	{ 0x3E, A | U, 0x3E, 0x00, 0x3E }, // >
	{ 0x3F, A | U, 0x3F, 0x00, 0x3F }, // ?
	{ 0x40, A | U, 0x40, 0x00, 0x40 }, // @
	{ 0x41, A | U, 0x41, 0x00, 0x41 }, // A
	{ 0x42, A | U, 0x42, 0x00, 0x42 }, // B
	{ 0x43, A | U, 0x43, 0x00, 0x43 }, // C
	{ 0x44, A | U, 0x44, 0x00, 0x44 }, // D
	{ 0x45, A | U, 0x45, 0x00, 0x45 }, // E
	{ 0x46, A | U, 0x46, 0x00, 0x46 }, // F
	{ 0x47, A | U, 0x47, 0x00, 0x47 }, // G
	{ 0x48, A | U, 0x48, 0x00, 0x48 }, // H
	{ 0x49, A | U, 0x49, 0x00, 0x49 }, // I
	{ 0x4A, A | U, 0x4A, 0x00, 0x4A }, // J
	{ 0x4B, A | U, 0x4B, 0x00, 0x4B }, // K
	{ 0x4C, A | U, 0x4C, 0x00, 0x4C }, // L
	{ 0x4D, A | U, 0x4D, 0x00, 0x4D }, // M
	{ 0x4E, A | U, 0x4E, 0x00, 0x4E }, // N
	{ 0x4F, A | U, 0x4F, 0x00, 0x4F }, // O
	{ 0x50, A | U, 0x50, 0x00, 0x50 }, // P
	{ 0x51, A | U, 0x51, 0x00, 0x51 }, // Q
	{ 0x52, A | U, 0x52, 0x00, 0x52 }, // R
	{ 0x53, A | U, 0x53, 0x00, 0x53 }, // S
	{ 0x54, A | U, 0x54, 0x00, 0x54 }, // T
	{ 0x55, A | U, 0x55, 0x00, 0x55 }, // U
	{ 0x56, A | U, 0x56, 0x00, 0x56 }, // V
	{ 0x57, A | U, 0x57, 0x00, 0x57 }, // W
	{ 0x58, A | U, 0x58, 0x00, 0x58 }, // X
	{ 0x59, A | U, 0x59, 0x00, 0x59 }, // Y
	{ 0x5A, A | U, 0x5A, 0x00, 0x5A }, // Z
	{ 0x5B, A | U, 0x5B, 0x00, 0x5B }, // [
	{ 0x5C, A | U, 0x5C, 0x00, 0x5C }, // \ 
	{ 0x5D, A | U, 0x5D, 0x00, 0x5D }, // ]
	{ 0x5E, A | U, 0x5E, 0x00, 0x5E }, // ^
	{ 0x5F, A | U, 0x5F, 0x00, 0x5F }, // _
	{ 0x60, A | U, 0x60, 0x00, 0x60 }, // `
	{ 0x61, A | U, 0x61, 0x00, 0x61 }, // a
	{ 0x62, A | U, 0x62, 0x00, 0x62 }, // b
	{ 0x63, A | U, 0x63, 0x00, 0x63 }, // c
	{ 0x64, A | U, 0x64, 0x00, 0x64 }, // d
	{ 0x65, A | U, 0x65, 0x00, 0x65 }, // e
	{ 0x66, A | U, 0x66, 0x00, 0x66 }, // f
	{ 0x67, A | U, 0x67, 0x00, 0x67 }, // g
	{ 0x68, A | U, 0x68, 0x00, 0x68 }, // h
	{ 0x69, A | U, 0x69, 0x00, 0x69 }, // i
	{ 0x6A, A | U, 0x6A, 0x00, 0x6A }, // j
	{ 0x6B, A | U, 0x6B, 0x00, 0x6B }, // k
	{ 0x6C, A | U, 0x6C, 0x00, 0x6C }, // l
	{ 0x6D, A | U, 0x6D, 0x00, 0x6D }, // m
	{ 0x6E, A | U, 0x6E, 0x00, 0x6E }, // n
	{ 0x6F, A | U, 0x6F, 0x00, 0x6F }, // o
	{ 0x70, A | U, 0x70, 0x00, 0x70 }, // p
	{ 0x71, A | U, 0x71, 0x00, 0x71 }, // q
	{ 0x72, A | U, 0x72, 0x00, 0x72 }, // r
	{ 0x73, A | U, 0x73, 0x00, 0x73 }, // s
	{ 0x74, A | U, 0x74, 0x00, 0x74 }, // t
	{ 0x75, A | U, 0x75, 0x00, 0x75 }, // u
	{ 0x76, A | U, 0x76, 0x00, 0x76 }, // v
	{ 0x77, A | U, 0x77, 0x00, 0x77 }, // w
	{ 0x78, A | U, 0x78, 0x00, 0x78 }, // x
	{ 0x79, A | U, 0x79, 0x00, 0x79 }, // y
	{ 0x7A, A | U, 0x7A, 0x00, 0x7A }, // z
	{ 0x7B, A | U, 0x7B, 0x00, 0x7B }, // {
	{ 0x7C, A | U, 0x7C, 0x00, 0x7C }, // |
	{ 0x7D, A | U, 0x7D, 0x00, 0x7D }, // }
	{ 0x7E, A | U, 0x7E, 0x00, 0x7E }, // ~
	{ 0x00, ENCODING_VALID_END, 0x00,0x00,0x00}
	};

const struct encodingCharDef defaultEncodingCharWindows1252 [] = {
	{ 0x80, U, 0x00, 0x00, 0x20AC }, // €
	{ 0x82, U | A, 0xE2, 0x00, 0x201A }, // 
	{ 0x83, U | A, 0xC4, 0x00, 0x0192 }, // 
	{ 0x84, U | A, 0xE3, 0x00, 0x201e }, // 
	{ 0x85, U | A, 0xC9, 0x00, 0x2026 }, // 
	{ 0x86, U | A, 0xA0, 0x00, 0x2020 }, // 
	{ 0x87, U | A, 0xE0, 0x00, 0x2021 }, // 
	{ 0x88, U | A, 0xF6, 0x00, 0x02c6 }, // 
	{ 0x89, U | A, 0xE4, 0x00, 0x2030 }, // 
	{ 0x8A, U, 0x00, 0x00, 0x160 }, // 
	{ 0x8B, U | A, 0xDC, 0x00, 0x2039 }, // 
	{ 0x8C, U | A, 0xCE, 0x00, 0x152 }, // 
	{ 0x8E, U, 0x00, 0x00, 0x17D }, // 
	{ 0x91, U | A, 0xD4, 0x00, 0x2018 }, // 
	{ 0x92, U | A, 0xD5, 0x00, 0x2019 }, // 
	{ 0x93, U | A, 0xD2, 0x00, 0x201C }, // 
	{ 0x94, U | A, 0xD3, 0x00, 0x201D }, // 
	{ 0x95, U | A, 0xA5, 0x00, 0x2022 }, // 
	{ 0x96, U | A, 0xD0, 0x00, 0x2013 }, // 
	{ 0x97, U | A, 0xD1, 0x00, 0x2014 }, // 
	{ 0x98, U | A, 0xF8, 0x00, 0x2DC }, // 
	{ 0x99, U | A, 0xAA, 0x00, 0x2122 }, // 
	{ 0x9A, U, 0x00, 0x00, 0x161 }, // 
	{ 0x9B, U | A, 0xDD, 0x00, 0x203A }, // 
	{ 0x9C, U | A, 0xCF, 0x00, 0x153 }, // 
	{ 0x9E, U, 0x00, 0x00, 0x17E }, // 
	{ 0x9F, U | A, 0xD9, 0x00, 0x178 }, // 
	{ 0xA0, U | A, 0xCA, 0x00, 0xA0 }, // 
	{ 0xA1, U | A, 0xC1, 0x00, 0xA1 }, // 
	{ 0xA2, U | A, 0xA2, 0x00, 0xA2 }, // 
	{ 0xA3, U | A, 0xA3, 0x00, 0xA3 }, // 
	{ 0xA4, U, 0x00, 0x00, 0xA4 }, // 
	{ 0xA5, U | A, 0xB4, 0x00, 0xA5 }, // 
	{ 0xA6, U, 0x00, 0x00, 0xA6 }, // 
	{ 0xA7, U | A, 0xA4, 0x00, 0xA7 }, // 
	{ 0xA8, U | A, 0xAC, 0x00, 0xA8 }, // 
	{ 0xA9, U | A, 0xA9, 0x00, 0xA9 }, // 
	{ 0xAA, U | A, 0xBB, 0x00, 0xAA }, // 
	{ 0xAB, U | A, 0xC7, 0x00, 0xAB }, // 
	{ 0xAC, U | A, 0xC2, 0x00, 0xAC }, // 
	{ 0xAD, U, 0x00, 0x00, 0xAD }, // 
	{ 0xAE, U | A, 0xA8, 0x00, 0xAE }, // 
	{ 0xAF, U | A, 0xF8, 0x00, 0xAF }, // 
	{ 0xB0, U | A, 0xA1, 0x00, 0xB0 }, // 
	{ 0xB1, U | A, 0xB1, 0x00, 0xB1 }, // 
	{ 0xB2, U, 0x00, 0x00, 0xB2 }, // 
	{ 0xB3, U, 0x00, 0x00, 0xB3 }, // 
	{ 0xB4, U | A, 0xAB, 0x00, 0xB4 }, // 
	{ 0xB5, U | A, 0xB5, 0x00, 0xB5 }, // 
	{ 0xB6, U | A, 0xA6, 0x00, 0xB6 }, // 
	{ 0xB7, U | A, 0xE1, 0x00, 0xB7 }, // 
	{ 0xB8, U | A, 0xFC, 0x00, 0xB8 }, // 
	{ 0xB9, U, 0x00, 0x00, 0xB9 }, // 
	{ 0xBA, U | A, 0xBC, 0x00, 0xBA }, // 
	{ 0xBB, U | A, 0xC8, 0x00, 0xBB }, // 
	{ 0xBC, U, 0x00, 0x00, 0xBC }, // 
	{ 0xBD, U, 0x00, 0x00, 0xBD }, // 
	{ 0xBE, U, 0x00, 0x00, 0xBE }, // 
	{ 0xBF, U | A, 0xC0, 0x00, 0xBF }, // 
	{ 0xC0, U | A, 0xCB, 0x00, 0xC0 }, // 
	{ 0xC1, U | A, 0xE7, 0x00, 0xC1 }, // 
	{ 0xC2, U | A, 0xE5, 0x00, 0xC2 }, // 
	{ 0xC3, U | A, 0xCC, 0x00, 0xC3 }, // 
	{ 0xC4, U | A, 0x80, 0x00, 0xC4 }, // 
	{ 0xC5, U | A, 0x81, 0x00, 0xC5 }, // 
	{ 0xC6, U | A, 0xAE, 0x00, 0xC6 }, // 
	{ 0xC7, U | A, 0x82, 0x00, 0xC7 }, // 
	{ 0xC8, U | A, 0xE9, 0x00, 0xC8 }, // 
	{ 0xC9, U | A, 0x83, 0x00, 0xC9 }, // 
	{ 0xCA, U | A, 0xE6, 0x00, 0xCA }, // 
	{ 0xCB, U | A, 0xE8, 0x00, 0xCB }, // 
	{ 0xCC, U | A, 0xED, 0x00, 0xCC }, // 
	{ 0xCD, U | A, 0xEA, 0x00, 0xCD }, // 
	{ 0xCE, U | A, 0xEB, 0x00, 0xCE }, // 
	{ 0xCF, U | A, 0xEC, 0x00, 0xCF }, // 
	{ 0xD0, U, 0x00, 0x00, 0xD0 }, // 
	{ 0xD1, U | A, 0x84, 0x00, 0xD1 }, // 
	{ 0xD2, U | A, 0xF1, 0x00, 0xD2 }, // 
	{ 0xD3, U | A, 0xEE, 0x00, 0xD3 }, // 
	{ 0xD4, U | A, 0xEF, 0x00, 0xD4 }, // 
	{ 0xD5, U | A, 0xCD, 0x00, 0xD5 }, // 
	{ 0xD6, U | A, 0x85, 0x00, 0xD6 }, // 
	{ 0xD7, U, 0x00, 0x00, 0xD7 }, // 
	{ 0xD8, U | A, 0xAF, 0x00, 0xD8 }, // 
	{ 0xD9, U | A, 0xF4, 0x00, 0xD9 }, // 
	{ 0xDA, U | A, 0xF2, 0x00, 0xDA }, // 
	{ 0xDB, U | A, 0xF3, 0x00, 0xDB }, // 
	{ 0xDC, U | A, 0x86, 0x00, 0xDC }, // 
	{ 0xDD, U, 0x00, 0x00, 0xDD }, // 
	{ 0xDE, U, 0x00, 0x00, 0xDE }, // 
	{ 0xDF, U | A, 0xA7, 0x00, 0xDF }, // 
	{ 0xE0, U | A, 0x88, 0x00, 0xE0 }, // 
	{ 0xE1, U | A, 0x87, 0x00, 0xE1 }, // 
	{ 0xE2, U | A, 0x89, 0x00, 0xE2 }, // 
	{ 0xE3, U | A, 0x8B, 0x00, 0xE3 }, // 
	{ 0xE4, U | A, 0x8A, 0x00, 0xE4 }, // 
	{ 0xE5, U | A, 0x8C, 0x00, 0xE5 }, // 
	{ 0xE6, U | A, 0xBE, 0x00, 0xE6 }, // 
	{ 0xE7, U | A, 0x8D, 0x00, 0xE7 }, // 
	{ 0xE8, U | A, 0x8F, 0x00, 0xE8 }, // 
	{ 0xE9, U | A, 0x8E, 0x00, 0xE9 }, // 
	{ 0xEA, U | A, 0x90, 0x00, 0xEA }, // 
	{ 0xEB, U | A, 0x91, 0x00, 0xEB }, // 
	{ 0xEC, U | A, 0x93, 0x00, 0xEC }, // 
	{ 0xED, U | A, 0x92, 0x00, 0xED }, // 
	{ 0xEE, U | A, 0x94, 0x00, 0xEE }, // 
	{ 0xEF, U | A, 0x95, 0x00, 0xEF }, //
	{ 0xF0, U, 0x00, 0x00, 0xF0 }, // 
	{ 0xF1, U | A, 0x96, 0x00, 0xF1 }, // 
	{ 0xF2, U | A, 0x98, 0x00, 0xF2 }, // 
	{ 0xF3, U | A, 0x97, 0x00, 0xF3 }, // 
	{ 0xF4, U | A, 0x99, 0x00, 0xF4 }, // 
	{ 0xF5, U | A, 0x9B, 0x00, 0xF5 }, // 
	{ 0xF6, U | A, 0x9A, 0x00, 0xF6 }, // 
	{ 0xF7, U | A, 0xD6, 0x00, 0xF7 }, // 
	{ 0xF8, U | A, 0xBF, 0x00, 0xF8 }, // 
	{ 0xF9, U | A, 0x9D, 0x00, 0xF9 }, // 
	{ 0xFA, U | A, 0x9C, 0x00, 0xFA }, // 
	{ 0xFB, U | A, 0x9E, 0x00, 0xFB }, // 
	{ 0xFC, U | A, 0x9F, 0x00, 0xFC }, // 
	{ 0xFD, U, 0x00, 0x00, 0xFD }, // 
	{ 0xFE, U | A, 0x00, 0x00, 0xFE }, // 
	{ 0xFF, U | A, 0xD8, 0x00, 0xFF }, //  
	{ 0x00, ENCODING_VALID_END, 0x00, 0x00, 0x00 }
};

const struct encodingDef defaultEncodingASCII = 
{
	_("ASCII"),
	defaultEncodingCharASCII
};

const struct encodingDef defaultEncodingWindows1252 =
{
	_("Windows-1252"),
	defaultEncodingCharWindows1252
};

const struct encodingDef *defaultEncodings[] = 
{
	&defaultEncodingASCII,
	&defaultEncodingWindows1252,
	NULL
};